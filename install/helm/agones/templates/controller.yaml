# Copyright 2018 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: agones-controller
  namespace: {{ .Release.Namespace }}
  labels:
    component: controller
    app: {{ template "agones.name" . }}
    chart: {{ template "agones.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      stable.agones.dev/role: controller
      app: {{ template "agones.name" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        stable.agones.dev/role: controller
        app: {{ template "agones.name" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: {{ .Values.agones.serviceaccount.controller }}
      containers:
      - name: agones-controller
        image: "{{ .Values.agones.image.registry }}/{{ .Values.agones.image.controller.name}}:{{ .Values.agones.image.tag }}"
        imagePullPolicy: {{ .Values.agones.image.controller.pullPolicy }}
        env:
        - name: ALWAYS_PULL_SIDECAR # set the sidecar imagePullPolicy to Always
          value: {{ .Values.agones.image.sdk.alwaysPull | quote }}
        # minimum port that can be exposed to GameServer traffic
        - name: MIN_PORT
          value: {{ .Values.gameservers.minPort | quote }} 
        # maximum port that can be exposed to GameServer traffic
        - name: MAX_PORT
          value: {{ .Values.gameservers.maxPort | quote }}
        - name: SIDECAR # overwrite the GameServer sidecar image that is used
          value: "{{ .Values.agones.image.registry }}/{{ .Values.agones.image.sdk.name}}:{{ .Values.agones.image.tag }}"
        livenessProbe:
          httpGet:
            path: /live
            port: {{ .Values.agones.controller.healthCheck.http.port }}
          initialDelaySeconds: {{ .Values.agones.controller.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.agones.controller.healthCheck.periodSeconds }}
          failureThreshold: {{ .Values.agones.controller.healthCheck.failureThreshold }}
          timeoutSeconds: {{ .Values.agones.controller.healthCheck.timeoutSeconds }}
{{- if .Values.agones.controller.resources }}
        resources:
{{ toYaml .Values.agones.controller.resources | indent 10 }}
{{- end }}
        volumeMounts:
        - name: certs
          mountPath: /home/agones/certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: {{ template "agones.fullname" . }}-cert
